// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from "zod";
import type { RequirementId } from "../../db/hire_me/Requirement.js";
import type { RoleId } from "../../db/hire_me/Role.js";
import { roleId } from "./Role.js";

/** Represents the table hire_me.requirement */
export default interface Requirement {
	id: RequirementId;

	role_id: RoleId;

	description: string;

	bonus: boolean;
}

/** Represents the initializer for the table hire_me.requirement */
export interface RequirementInitializer {
	role_id: RoleId;

	description: string;

	bonus: boolean;
}

/** Represents the mutator for the table hire_me.requirement */
export interface RequirementMutator {
	role_id?: RoleId;

	description?: string;

	bonus?: boolean;
}

export const requirementId = z.number() as unknown as z.Schema<RequirementId>;

export const requirement = z.object({
	id: requirementId,
	role_id: roleId,
	description: z.string(),
	bonus: z.boolean(),
}) as unknown as z.Schema<Requirement>;

export const requirementInitializer = z.object({
	id: requirementId.optional(),
	role_id: roleId,
	description: z.string(),
	bonus: z.boolean(),
}) as unknown as z.Schema<RequirementInitializer>;

export const requirementMutator = z.object({
	id: requirementId.optional(),
	role_id: roleId.optional(),
	description: z.string().optional(),
	bonus: z.boolean().optional(),
}) as unknown as z.Schema<RequirementMutator>;
