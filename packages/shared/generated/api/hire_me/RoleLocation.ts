// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from "zod";
import { NumRange } from "../../../types/range.js";
import { roleId, type RoleId } from "./Role.js";

/** Identifier type for hire_me.role_location */
export type RoleLocationId = number & { __brand: "RoleLocationId" };

/** Represents the table hire_me.role_location */
export default interface RoleLocation {
	id: RoleLocationId;

	role_id: RoleId;

	location: string;

	on_site: boolean;

	hybrid: boolean;

	remote: boolean;

	office_days: NumRange | null;
}

/** Represents the initializer for the table hire_me.role_location */
export interface RoleLocationInitializer {
	role_id: RoleId;

	location: string;

	on_site: boolean;

	hybrid: boolean;

	remote: boolean;

	office_days?: NumRange | null;
}

/** Represents the mutator for the table hire_me.role_location */
export interface RoleLocationMutator {
	role_id?: RoleId;

	location?: string;

	on_site?: boolean;

	hybrid?: boolean;

	remote?: boolean;

	office_days?: NumRange | null;
}

export const roleLocationId = z.number() as unknown as z.Schema<RoleLocationId>;

export const roleLocation = z.object({
	id: roleLocationId,
	role_id: roleId,
	location: z.string(),
	on_site: z.boolean(),
	hybrid: z.boolean(),
	remote: z.boolean(),
	office_days: z
		.object({
			min: z.number().nullable(),
			max: z.number().nullable(),
		})
		.nullable(),
}) as unknown as z.Schema<RoleLocation>;

export const roleLocationInitializer = z.object({
	id: roleLocationId.optional(),
	role_id: roleId,
	location: z.string(),
	on_site: z.boolean(),
	hybrid: z.boolean(),
	remote: z.boolean(),
	office_days: z
		.object({
			min: z.number().nullable(),
			max: z.number().nullable(),
		})
		.optional()
		.nullable(),
}) as unknown as z.Schema<RoleLocationInitializer>;

export const roleLocationMutator = z.object({
	id: roleLocationId.optional(),
	role_id: roleId.optional(),
	location: z.string().optional(),
	on_site: z.boolean().optional(),
	hybrid: z.boolean().optional(),
	remote: z.boolean().optional(),
	office_days: z
		.object({
			min: z.number().nullable(),
			max: z.number().nullable(),
		})
		.optional()
		.nullable(),
}) as unknown as z.Schema<RoleLocationMutator>;
