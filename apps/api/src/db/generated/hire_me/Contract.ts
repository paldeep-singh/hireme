// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import type { ColumnType, Insertable, Selectable, Updateable } from "kysely";
import { IPostgresInterval } from "postgres-interval";
import { Range } from "postgres-range";
import type { default as ContractType } from "./ContractType";
import type { RoleId } from "./Role";
import type { default as SalaryPeriod } from "./SalaryPeriod";

/** Identifier type for hire_me.contract */
export type ContractId = number & { __brand: "ContractId" };

/** Represents the table hire_me.contract */
export default interface ContractTable {
	id: ColumnType<ContractId, never, never>;

	role_id: ColumnType<RoleId, RoleId, RoleId>;

	type: ColumnType<ContractType, ContractType, ContractType>;

	salary_range: ColumnType<
		Range<number> | null,
		Range<number> | null,
		Range<number> | null
	>;

	salary_includes_super: ColumnType<
		boolean | null,
		boolean | null,
		boolean | null
	>;

	salary_period: ColumnType<
		SalaryPeriod | null,
		SalaryPeriod | null,
		SalaryPeriod | null
	>;

	salary_currency: ColumnType<string | null, string | null, string | null>;

	term: ColumnType<
		IPostgresInterval | null,
		IPostgresInterval | null,
		IPostgresInterval | null
	>;
}

export type Contract = Selectable<ContractTable>;

export type NewContract = Insertable<ContractTable>;

export type ContractUpdate = Updateable<ContractTable>;
