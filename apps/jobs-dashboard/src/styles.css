@layer reset, base, layout, utilities;

@layer reset {
	*,
	*::before,
	*::after {
		box-sizing: border-box;
	}

	/* https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/ */
	html {
		-moz-text-size-adjust: none;
		-webkit-text-size-adjust: none;
		text-size-adjust: none;
	}

	body,
	h1,
	h2,
	h3,
	h4,
	p,
	figure,
	blockquote,
	dl,
	dd {
		margin: 0;
	}

	/* https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html */
	[role="list"] {
		list-style: none;
		margin: 0;
		padding: 0;
	}

	body {
		min-block-size: 100vh;
		line-height: 1.6;
	}

	h1,
	h2,
	h3,
	button,
	input,
	label {
		line-height: 1.1;
	}

	h1,
	h2,
	h3,
	h4 {
		text-wrap: balance;
	}

	p,
	li {
		text-wrap: pretty;
	}

	img,
	picture {
		max-inline-size: 100%;
		display: block;
	}

	input,
	button,
	textarea,
	select {
		font: inherit;
	}
}

@layer base {
	:root {
		/* Custom variables. */
		--clr-100: hsl(0 0% 0%);
		--clr-90: hsl(0 0% 10%);
		--clr-80: hsl(0 0% 20%);
		--clr-70: hsl(0 0% 30%);
		--clr-60: hsl(0 0% 40%);
		--clr-50: hsl(0 0% 50%);
		--clr-40: hsl(0 0% 60%);
		--clr-30: hsl(0 0% 70%);
		--clr-20: hsl(0 0% 80%);
		--clr-10: hsl(0 0% 90%);
		--clr-00: hsl(0 0% 100%);

		--ff-heading: "Montserrat", sans-serif;
		--ff-body: "Genos", sans-serif;

		--fs-300: 0.875rem;
		--fs-400: 1rem;
		--fs-500: 1.125rem;
		--fs-600: 1.25rem;
		--fs-700: 1.5rem;
		--fs-800: 2rem;
		--fs-900: 3.75rem;
		--fs-1000: 3.75rem;

		@media (width > 760px) {
			--fs-300: 0.875rem;
			--fs-400: 1rem;
			--fs-500: 1.25rem;
			--fs-600: 1.5rem;
			--fs-700: 2rem;
			--fs-800: 3rem;
			--fs-900: 5rem;
			--fs-1000: 7.5rem;
		}

		--border-radius-1: 0.25rem;
		--border-radius-2: 0.5rem;
		--border-radius-3: 0.75rem;
	}

	/* Semantic variables */
	:root {
		--font-size-heading-sm: var(--fs-700);
		--font-size-heading-regular: var(--fs-800);
		--font-size-heading-lg: var(--fs-900);
		--font-size-heading-xl: var(--fs-1000);

		--font-size-sm: var(--fs-300);
		--font-size-regular: var(--fs-400);
		--font-size-md: var(--fs-500);
		--font-size-lg: var(--fs-600);

		--text-on-bg-light: var(--clr-70);
		--text-on-bg-base: var(--clr-80);
		--text-on-bg-dark: var(--clr-90);
		--text-on-bg-primary: var(--clr-00);

		--background-light: var(--clr-00);
		--background-base: var(--clr-10);
		--background-dark: var(--clr-30);
		--background-primary: var(--clr-60);
		--background-primary-accent: var(--clr-50);

		--border: var(--clr-50);
	}

	:root {
		/* Global styling */
		html {
			scroll-padding: 2rem;
		}

		body {
			font-size: var(--font-size-regular);
			color: var(--text-on-bg-base);
			background-color: var(--background-base);
			font-family: var(--ff-body);
			line-height: 1.6;
		}

		h1,
		h2,
		h3,
		h4 {
			font-family: var(--ff-heading);
			font-weight: 700;
		}
	}
}

@layer layout {
	.equal-columns {
		display: grid;
		gap: var(--equal-columns-gap, 1rem);
		align-items: var(--equal-columns-vertical-alignment, stretch);

		@media (width > 760px) {
			grid-auto-flow: column;
			/* All columns are same size, easier to control everything
      through the parent instead of through the child as with flex (see below) */
			grid-auto-columns: 1fr;
		}

		&[data-gap="large"] {
			--equal-columns-gap: 2rem;
		}

		&[data-alignment="centered"] {
			--equal-columns-vertical-alignment: center;
		}
	}

	/* Select only elements with a preceding sibling.
  i.e. every child except first child. */
	.flow {
		--flow-space: 1em; /* default */

		&[data-spacing="small"] {
			--flow-space: 0.25em;
		}

		> * + * {
			margin-top: var(--flow-space);
		}
	}

	.grid-auto-fill {
		--auto-fit-min-col-size: max(25%, 300px);
		display: grid;
		gap: 1rem;
		/* if min is too high, it can cause overflow at narrower sizes
    hence we set the min inside as well. */
		/* Auto fit will stretch items, auto-fill will add empty cells.
    Usually you wat fit but fill works good here */
		grid-template-columns: repeat(
			auto-fill,
			minmax(min(var(--auto-fit-min-col-size), 100%), 1fr)
		);
	}

	.grid-center-screen {
		display: grid;
		place-items: center;
		min-height: 100vh;
	}

	.grid-center-screen-block {
		display: grid;
		min-height: 100vh;
		align-items: center;
	}

	.wrapper {
		--wrapper-padding: 2rem;

		max-width: var(--wrapper-max-width, 100%);
		margin-inline: auto;
		padding-inline: var(--wrapper-padding);
		/* Below is done because padding takes away from max-width and makes it effectively smaller with border-box */
		box-sizing: content-box;
	}
}

@layer components {
	.button {
		display: flex;
		gap: 0.5rem;
		align-items: center;
		background-color: var(--background-primary);
		padding: 0.5rem 1rem;
		border-radius: var(--border-radius-1);
		color: var(--text-on-bg-primary);
		cursor: pointer;
	}

	.button:active,
	.button:hover {
		background-color: var(--background-primary-accent);
	}

	.role-card {
		display: grid;
		grid-template-rows: 1fr 1fr;
		grid-template-areas:
			"details"
			"notes";
		padding: 1rem;
		background-color: var(--background-light);
		border-radius: var(--border-radius-3);
	}

	.role-card__details {
		grid-area: details;
	}

	.role-card__notes {
		grid-area: notes;
	}

	.role-card__company {
		font-weight: 500;
		font-size: var(--font-size-lg);
	}

	.role-card__location {
		font-size: var(--font-size-md);
	}

	.error-banner {
		padding-inline: 1rem;
		border-radius: var(--border-radius-2);
		border-width: 4px;
		border-style: solid;
		border-color: var(--border);
		font-weight: bold;
		min-width: 100%;
		opacity: 1;
		transition: opacity 1s;

		@starting-style {
			opacity: 0;
		}
	}

	.header {
		display: flex;
		position: relative;
		width: 100%;
		padding-block: 1rem;
		padding-inline: 2rem;
		justify-content: space-between;
		border-radius: var(--border-radius-2);
		margin-block-end: 1rem;
		background-color: var(--background-light);
	}

	.header__title {
		font-family: var(--ff-heading);
		font-size: var(--font-size-lg);
		font-weight: 700;
	}

	.loading-spinner {
		width: 1rem;
		height: 1rem;
		border-radius: 50%;
		border-width: 2px;
		border-style: solid;
		border-color: var(--text-on-bg-primary);
		border-top-color: transparent;
		animation-name: spin;
		animation-duration: 1s;
		animation-timing-function: linear;
		animation-iteration-count: infinite;
	}

	.login-form {
		display: flex;
		flex-direction: column;
		align-items: center;
		border-width: 4px;
		border-style: solid;
		border-color: var(--border);
		border-radius: var(--border-radius-3);
		padding: 1rem 2rem;
		width: fit-content;
		background-color: var(--background-light);
	}

	/* TextField component */
	input {
		&[type="email"],
		&[type="password"],
		&[type="text"] {
			border-width: 2px;
			border-style: solid;
			border-color: var(--border);
			display: block;
		}
	}

	/* TextField validation error */
	input[type="email"] + em,
	input[type="password"] + em,
	input[type="text"] + em {
		opacity: 1;
		transition: opacity, 1s;

		@starting-style {
			opacity: 0;
		}
	}
}

@layer utilities {
	.visually-hidden {
		clip: rect(0 0 0 0);
		clip-path: inset(50%);
		height: 1px;
		overflow: hidden;
		position: absolute;
		white-space: nowrap;
		width: 1px;
	}

	.text-center {
		text-align: center;
	}

	.background-base {
		background-color: var(--background-base);
	}
	.background-light {
		background-color: var(--background-light);
	}
	.background-dark {
		background-color: var(--background-dark);
	}
	.font-size-sm {
		font-size: var(--font-size-sm);
	}
	.font-size-regular {
		font-size: var(--font-size-regular);
	}
	.font-size-md {
		font-size: var(--font-size-md);
	}
	.font-size-lg {
		font-size: var(--font-size-lg);
	}

	.text-align-start {
		text-align: start;
	}

	.flex-space-between {
		display: flex;
		justify-content: space-between;
	}
}

@keyframes spin {
	to {
		transform: rotate(360deg);
	}
}
