name: Run Database Migrations

on:
  workflow_call:
    secrets:
      TF_API_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run migrations on"
        required: true
        default: "main"
  push:
    branches: [main]
    paths:
      - "apps/api/db/sqitch.plan"
      - ".github/workflows/migrations.yml"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY: migration-runner

jobs:
  run-db-migrations:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Debug GitHub OIDC Token
        id: debug-oidc
        run: |
          echo "Fetching OIDC token from GitHub..."
          export TOKEN_URL="$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com"
          export TOKEN=$(curl -sH "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$TOKEN_URL" | jq -r .value)

          echo "Decoded OIDC token payload:"
          echo "$TOKEN" | cut -d '.' -f2 | base64 -d

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/hire-me-db-migrations-github-action
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init and Apply
        working-directory: infra/ephemeral/migrations
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f infra/images/Dockerfile.migrations .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Start CodeBuild Project
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: sqitch-migrations
          region: ${{ env.AWS_REGION }}
          wait: true
          source-type-override: "NO_SOURCE"

      - name: Terraform Destroy
        if: always()
        working-directory: infra/ephemeral/migrations
        run: |
          terraform init
          terraform destroy -auto-approve
