// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { companyId, type CompanyId } from './Company';
import { z } from 'zod';

/** Identifier type for hire_me.role */
export type RoleId = number & { __brand: 'RoleId' };

/** Represents the table hire_me.role */
export default interface Role {
  id: RoleId;

  company_id: CompanyId;

  title: string;

  cover_letter: string;
}

/** Represents the initializer for the table hire_me.role */
export interface RoleInitializer {
  company_id: CompanyId;

  title: string;

  cover_letter: string;
}

/** Represents the mutator for the table hire_me.role */
export interface RoleMutator {
  company_id?: CompanyId;

  title?: string;

  cover_letter?: string;
}

export const roleId = z.number() as unknown as z.Schema<RoleId>;

export const role = z.object({
  id: roleId,
  company_id: companyId,
  title: z.string(),
  cover_letter: z.string(),
}) as unknown as z.Schema<Role>;

export const roleInitializer = z.object({
  id: roleId.optional(),
  company_id: companyId,
  title: z.string(),
  cover_letter: z.string(),
}) as unknown as z.Schema<RoleInitializer>;

export const roleMutator = z.object({
  id: roleId.optional(),
  company_id: companyId.optional(),
  title: z.string().optional(),
  cover_letter: z.string().optional(),
}) as unknown as z.Schema<RoleMutator>;
