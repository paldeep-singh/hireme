// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { roleId, type RoleId } from './Role';
import { requirementMatchLevel, type default as RequirementMatchLevel } from './RequirementMatchLevel';
import { z } from 'zod';

/** Identifier type for hire_me.requirement */
export type RequirementId = number & { __brand: 'RequirementId' };

/** Represents the table hire_me.requirement */
export default interface Requirement {
  id: RequirementId;

  role_id: RoleId;

  requirement: string;

  match_level: RequirementMatchLevel;

  match_justification: string;

  bonus: boolean;
}

/** Represents the initializer for the table hire_me.requirement */
export interface RequirementInitializer {
  role_id: RoleId;

  requirement: string;

  match_level: RequirementMatchLevel;

  match_justification: string;

  bonus: boolean;
}

/** Represents the mutator for the table hire_me.requirement */
export interface RequirementMutator {
  role_id?: RoleId;

  requirement?: string;

  match_level?: RequirementMatchLevel;

  match_justification?: string;

  bonus?: boolean;
}

export const requirementId = z.number() as unknown as z.Schema<RequirementId>;

export const requirement = z.object({
  id: requirementId,
  role_id: roleId,
  requirement: z.string(),
  match_level: requirementMatchLevel,
  match_justification: z.string(),
  bonus: z.boolean(),
}) as unknown as z.Schema<Requirement>;

export const requirementInitializer = z.object({
  id: requirementId.optional(),
  role_id: roleId,
  requirement: z.string(),
  match_level: requirementMatchLevel,
  match_justification: z.string(),
  bonus: z.boolean(),
}) as unknown as z.Schema<RequirementInitializer>;

export const requirementMutator = z.object({
  id: requirementId.optional(),
  role_id: roleId.optional(),
  requirement: z.string().optional(),
  match_level: requirementMatchLevel.optional(),
  match_justification: z.string().optional(),
  bonus: z.boolean().optional(),
}) as unknown as z.Schema<RequirementMutator>;
