// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { roleId, type RoleId } from './Role';
import { z } from 'zod';

/** Identifier type for hire_me.application */
export type ApplicationId = number & { __brand: 'ApplicationId' };

/** Represents the table hire_me.application */
export default interface Application {
  id: ApplicationId;

  role_id: RoleId;

  code_hash: string;

  cover_letter: string;
}

/** Represents the initializer for the table hire_me.application */
export interface ApplicationInitializer {
  role_id: RoleId;

  code_hash: string;

  cover_letter: string;
}

/** Represents the mutator for the table hire_me.application */
export interface ApplicationMutator {
  role_id?: RoleId;

  code_hash?: string;

  cover_letter?: string;
}

export const applicationId = z.number() as unknown as z.Schema<ApplicationId>;

export const application = z.object({
  id: applicationId,
  role_id: roleId,
  code_hash: z.string(),
  cover_letter: z.string(),
}) as unknown as z.Schema<Application>;

export const applicationInitializer = z.object({
  id: applicationId.optional(),
  role_id: roleId,
  code_hash: z.string(),
  cover_letter: z.string(),
}) as unknown as z.Schema<ApplicationInitializer>;

export const applicationMutator = z.object({
  id: applicationId.optional(),
  role_id: roleId.optional(),
  code_hash: z.string().optional(),
  cover_letter: z.string().optional(),
}) as unknown as z.Schema<ApplicationMutator>;
